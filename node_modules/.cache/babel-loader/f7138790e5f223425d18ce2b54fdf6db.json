{"ast":null,"code":"var _jsxFileName = \"/home/bishal/Desktop/web_development/front-end/react-todo-app/src/App.js\";\nimport React from 'react';\nimport './App.css';\n\nfunction TodoForm({\n  addTodo\n}) {\n  const [value, setValue] = React.useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    addTodo(value);\n    setValue(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"todo\",\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }, \"Todo\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    readOnly: true,\n    className: \"form-control-plaintext\",\n    id: \"todo\",\n    value: value,\n    onChange: e => setValue(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group mx-sm-3 mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }));\n}\n\nfunction Todo({\n  todo,\n  index,\n  complete,\n  removeTodo\n}) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-group-item\",\n    style: {\n      textDecoration: todo.isCompleted ? \"line-through\" : \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, todo.text, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => complete(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"Completed\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => removeTodo(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"Remove\")));\n}\n\n;\n\nfunction App() {\n  const [todos, setTodos] = React.useState([]);\n\n  const addTodo = text => {\n    const newTodos = [...todos, {\n      text\n    }];\n    setTodos(newTodos);\n  };\n\n  const completeTodo = index => {\n    const newTodos = [...todos];\n    newTodos[index].isCompleted = true;\n    setTodos(newTodos);\n  };\n\n  const removeTodo = index => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos(newTodos);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TodoForm, {\n    addTodo: addTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, todos.map((todo, index) => /*#__PURE__*/React.createElement(Todo, {\n    key: index,\n    index: index,\n    todo: todo,\n    complete: completeTodo,\n    removeTodo: removeTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/bishal/Desktop/web_development/front-end/react-todo-app/src/App.js"],"names":["React","TodoForm","addTodo","value","setValue","useState","handleSubmit","e","preventDefault","target","Todo","todo","index","complete","removeTodo","textDecoration","isCompleted","text","App","todos","setTodos","newTodos","completeTodo","splice","map"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\nfunction TodoForm({ addTodo }){\n  const [value, setValue] = React.useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    addTodo(value);\n    setValue(\"\");\n  };\n  \n  return (\n      <form className=\"form-inline\">\n        <div className=\"form-group mb-2\">\n          <label for=\"todo\" className=\"sr-only\">Todo</label>\n          <input type=\"text\" readOnly className=\"form-control-plaintext\" id=\"todo\" value={value} onChange={e => setValue(e.target.value)} />\n        </div>\n        <div className=\"form-group mx-sm-3 mb-2\">\n          \n        </div>\n      </form>\n  );\n}\n\nfunction Todo({ todo, index, complete, removeTodo }) {\n  return (\n    <div className=\"list-group-item\" style={{ textDecoration: todo.isCompleted ? \"line-through\" : \"none\" }}>\n      {todo.text}\n      <div>\n        <button onClick={() => complete(index)}>Completed</button>\n        <button onClick={() => removeTodo(index)}>Remove</button>\n      </div>\n    </div>\n  );\n};\n\nfunction App() {\n  const [todos, setTodos] = React.useState([]);\n\n  const addTodo = text => {\n    const newTodos = [...todos, { text }];\n    setTodos(newTodos);\n  };\n\n  const completeTodo = index => {\n    const newTodos = [...todos];\n    newTodos[index].isCompleted = true;\n    setTodos(newTodos);\n  };\n\n  const removeTodo = index => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos(newTodos);\n  };\n\n  return (\n    <div className=\"container\">\n      <TodoForm addTodo={addTodo} />\n      <div className=\"list-group\">\n        { todos.map((todo, index) => (\n          <Todo \n          key = {index}\n          index = {index}\n          todo = {todo}\n          complete = {completeTodo}\n          removeTodo = {removeTodo}\n          />\n        ))}\n      </div>\n    </div>\n  );  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}