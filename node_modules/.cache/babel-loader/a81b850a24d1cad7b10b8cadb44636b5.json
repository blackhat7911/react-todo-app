{"ast":null,"code":"var _jsxFileName = \"/home/bishal/Desktop/web_development/front-end/react-todo-app/src/App.js\";\nimport React, { Component } from 'react';\n\nfunction TodoForm({\n  addTodo\n}) {\n  const [value, setValue] = React.useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    addTodo(value);\n    setValue(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    value: value,\n    onChange: e => setValue(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction Todo({\n  todo,\n  index,\n  complete,\n  removeTodo\n}) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-group-item\",\n    style: {\n      textDecoration: todo.isCompleted ? \"line-through\" : \"\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, todo.text, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => complete(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, \"Completed\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => removeTodo(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \"Remove\")));\n}\n\n;\n\nfunction App() {\n  const [todos, setTodos] = React.useState([{\n    text: \"Code\",\n    isCompleted: false\n  }, {\n    text: \"Eat\",\n    isCompleted: true\n  }, {\n    text: \"Learn\",\n    isCompleted: false\n  }, {\n    text: \"Sleep\",\n    isCompleted: true\n  }]);\n\n  const addTodo = text => {\n    const newTodos = [...todos, {\n      text\n    }];\n    setTodos;\n  };\n\n  const complete = index => {\n    const newTodos = [...todos];\n    newTodos.index.isCompleted = false;\n    setTodos(newTodos);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, todos.map((todo, index) => /*#__PURE__*/React.createElement(Todo, {\n    key: index,\n    index: index,\n    todo: todo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/bishal/Desktop/web_development/front-end/react-todo-app/src/App.js"],"names":["React","Component","TodoForm","addTodo","value","setValue","useState","handleSubmit","e","preventDefault","target","Todo","todo","index","complete","removeTodo","textDecoration","isCompleted","text","App","todos","setTodos","newTodos","map"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n\nfunction TodoForm({ addTodo }){\n  const [value, setValue] = React.useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    addTodo(value);\n    setValue(\"\");\n  };\n  \n  return (\n    <form onSubmit = {handleSubmit}>\n      <input type=\"text\" className=\"form-control\" value={ value } onChange={e => setValue(e.target.value)}/>\n    </form>\n  );\n}\n\nfunction Todo({ todo, index, complete, removeTodo }) {\n  return (\n    <div className=\"list-group-item\" style={{ textDecoration: todo.isCompleted ? \"line-through\" : \"\" }}>\n      {todo.text}\n      <div>\n        <button onClick={() => complete(index)}>Completed</button>\n        <button onClick={() => removeTodo(index)}>Remove</button>\n      </div>\n    </div>\n  );\n};\n\nfunction App() {\n  const [todos, setTodos] = React.useState([\n    { text: \"Code\", isCompleted: false  },\n    { text: \"Eat\" , isCompleted: true   },\n    { text: \"Learn\", isCompleted: false },\n    { text: \"Sleep\", isCompleted: true  }\n  ]);\n\n  const addTodo = text => {\n    const newTodos = [...todos, { text }];\n    setTodos\n  };\n\n  const complete = index => {\n    const newTodos = [...todos];\n    newTodos.index.isCompleted = false;\n    setTodos(newTodos);\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"list-group\">\n        { todos.map((todo, index) => (\n          <Todo \n          key = {index}\n          index = {index}\n          todo = {todo}\n          />\n        ))}\n      </div>\n    </div>\n  );  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}